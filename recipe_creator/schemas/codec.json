{
    "$id": "https://raw.githubusercontent.com/legopitstop/Python_Projects/main/recipe_creator/schemas/builder.json",
    "$schema": "http://json-schema.org/draft-07/schema",
    "title": "builder",
    "description": "JSON Schema for Recipe Creator builders",
    "type": "object",
    "default": {},
    "anyOf": [
        {
            "if": {
                "properties": {
                    "builder": true
                }
            },
            "then": {
                "required": [
                    "builder"
                ]
            }
        },
        {
            "if": {
                "properties": {
                    "subbuilder": true
                }
            },
            "then": {
                "required": [
                    "subbuilder"
                ]
            }
        }
    ],
    "definitions": {
        "ProjectConditions": {
            "type": "object",
            "default": {},
            "properties": {
                "filename": {
                    "description": "Test the filename of the project",
                    "type": "string"
                },
                "identifier": {
                    "description": "Test the identifier of the project",
                    "type": "string"
                },
                "options": {
                    "description": "To test this projects options.",
                    "type": "object",
                    "default": {},
                    "additionalProperties": {
                        "description": "The value to test.",
                        "type": [
                            "string",
                            "number",
                            "boolean",
                            "null",
                            "object"
                        ],
                        "properties": {
                            "min": {
                                "description": "The minium value.",
                                "type": "number"
                            },
                            "max": {
                                "description": "The maxium value.",
                                "type": "number"
                            },
                            "anyOf": {
                                "description": "Test if value is any of these values.",
                                "type": "array",
                                "default": [],
                                "items": {
                                    "$ref": "#/definitions/ProjectConditions/properties/options/additionalProperties"
                                }
                            }
                        }
                    }
                },
                "slots": {
                    "description": "Test the item in the slot.",
                    "type": "object",
                    "default": {},
                    "additionalProperties": {
                        "type": [
                            "string",
                            "object"
                        ],
                        "properties": {
                            "items": {
                                "description": "Test the type of item in the item stack. Accepts a list of item ID's. Passes if the item's ID matches any of the listed values.",
                                "type": "array",
                                "default": [],
                                "items": {
                                    "type": "string"
                                }
                            },
                            "nbt": {
                                "description": "Test for any other NBT tags that may be present on the item.",
                                "type": "string"
                            },
                            "count": {
                                "description": "Test the number of items in this item stack. Use an integer for a single value. Use an object with min and max keys to test for a range of values (inclusive)",
                                "type": [
                                    "object",
                                    "integer"
                                ],
                                "default": {},
                                "properties": {
                                    "min": {
                                        "type": "integer"
                                    },
                                    "max": {
                                        "type": "integer"
                                    }
                                }
                            },
                            "tag": {
                                "description": "Test if the item ID of this item is listed withina pack item tag. Accepts the resrouce location of a valid item tag.",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "Conditions": {
            "description": "A list of conditions that must pass to use this builder.",
            "type": [
                "object",
                "array"
            ],
            "default": {},
            "required": [
                "condition"
            ],
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "condition": {
                                "const": "project_properties"
                            }
                        }
                    },
                    "then": {
                        "required": [
                            "predicate"
                        ],
                        "properties": {
                            "predicate": {
                                "$ref": "#/definitions/ProjectConditions"
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "condition": {
                                "const": "inverted"
                            }
                        }
                    },
                    "then": {
                        "required": [
                            "term"
                        ]
                    }
                },
                {
                    "if": {
                        "properties": {
                            "condition": {
                                "const": "random_chance"
                            }
                        }
                    },
                    "then": {
                        "required": [
                            "chance"
                        ]
                    }
                }
            ],
            "properties": {
                "condition": {
                    "description": "The type of condition to use that must pass.",
                    "enum": [
                        "project_properties",
                        "inverted",
                        "random_chance"
                    ]
                },
                "predicate": {
                    "type": "object",
                    "default": {},
                    "properties": {}
                },
                "chance": {
                    "title": "CHANCE",
                    "description": "Success rate as a number 0.0-1.0",
                    "type": "number",
                    "minium": 0.0,
                    "maxium": 1.0,
                    "default": 0.0
                },
                "term": {
                    "title": "INVERTED",
                    "description": "The condition to be negated, following the same struture as root.",
                    "type": "object",
                    "default": {},
                    "$ref": "#/definitions/Conditions/properties"
                }
            },
            "items": {
                "$ref": "#/definitions/Conditions/properties"
            }
        }
    },
    "required": [
        "extension",
        "compile"
    ],
    "properties": {
        "display": {
            "description": "Display properties for the codec",
            "type": "object",
            "default": {},
            "properties": {
                "name": {
                    "description": "Name of the Codec",
                    "type": "string"
                },
                "icon": {
                    "description": "Icon of the Codec. Recomended size 24x24",
                    "type": "string"
                }
            }
        },
        "extension": {
            "description": "Default extension for the codec",
            "type": "string"
        },
        "remember": {
            "description": "Whether to remember the model in the recent files list and as the opened model file.",
            "type": "boolean",
            "default": true
        },
        "identifier_set": {
            "description": "identifier set to use with this codec. Will use the default identifier",
            "type":"string"
        },
        "compile": {
            "description": "Should return the compiled recipe",
            "type": [
                "object",
                "array"
            ],
            "default": {},
            "required": [
                "type"
            ],
            "items": {
                "type": "object",
                "default": {},
                "properties": {
                    "conditions": {
                        "$ref": "#/definitions/Conditions"
                    },
                    "compile": {
                        "$ref": "#/properties/compile"
                    }
                }
            },
            "properties": {
                "type": {
                    "description": "The type of compiler to use.",
                    "enum": [
                        "json"
                    ]
                },
                "template": {
                    "description": "The template for the compiler.",
                    "type": [
                        "object",
                        "string"
                    ],
                    "default": {}
                },
                "replace": {
                    "description": "Replace variables ${variable} in the template.",
                    "type": "object",
                    "default": {},
                    "additionalProperties": {
                        "type": "object",
                        "default": {},
                        "properties": {
                            "type": {
                                "description": "The type of replacement",
                                "enum": [
                                    "grid",
                                    "slot",
                                    "option",
                                    "project"
                                ]
                            },
                            "slots": {
                                "description": "A list of columns",
                                "type": "array",
                                "default": [],
                                "items": {
                                    "description": "A list of rows",
                                    "type": "array",
                                    "default": [],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "value": {
                                "description": "The value to use.",
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    }
                }
            },
            "additionalProperties": false
        },
        "parse": {
            "description": "Parse and add the provided model to Recipe Creator",
            "type": "object",
            "default": {},
            "properties": {},
            "additionalProperties": false
        }
    },
    "patternProperties": {
        "^\\$": true
    },
    "additionalProperties": false
}